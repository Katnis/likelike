#labels Featured
=Requirements=

 * Java 1.6.0 or greater
 * Hadoop 0.20.0 or greater

=Download and install=
 * Install Java (install from [http://www.java.com/download/ download page]) 
 * Install Hadoop  (see [http://hadoop.apache.org/common/docs/current/quickstart.html Hadoop Quick Start])
 * Install Likelike
   # go to your home directory (/home/username if your account name is 'username')
     {{{
     cd /home/username/
     }}}
   # download the source file by svn
     {{{
     svn checkout http://likelike.googlecode.com/svn/trunk/ likelike
     }}}
   # run ant
     {{{
     cd likelike
     ant
     }}}     
   # set path 
   adding the oluolu jar file into HADOOP_CLASSPATH in $HADOOP_HOME/conf/hadoop-env.sh)
     {{{
     export HADOOP_CLASSPATH=$CLASSPATH:/home/username/likelike/likelike-***.jar
     }}}

=Running examples= 
Now let's run Likelike with a sample input file attached in the Likelike source (likelike/src/test/resources/testInput.txt).

=Nearest neighbor extraction= 
Here I will describe the way to extract the similar (related) examples from data file. Here examples mean instances such as users in E-commerce sites or pictures for picture sharing sites).

First copy a sample input file into HDFS.

{{{
$ hadoop dfs -put src/test/resources/testInput.txt /blah/blah/path/
}}}

Run likelike with the following parameters.

{{{
sh bin/likelike lsh -input src/test/resources/testInput.txt -output testOutputDir
}}}

We can see the result by the following command.

{{{
$ hadoop dfs -cat /blah/blah/path/testOutpuDir
0       5766
0       1962
0       2649
}}}

=Feature extraction from similar (related) examples=

Now let's extract features from related examples. This function is useful to extract some recommendations for users of E-commerce sites.

To run this function, we use the result of nearest neighbor extraction. The extraction can be done with the following command.

{{{
sh bin/likelike lsh -input src/test/resources/testOutputDir -feature rc/test/resources/testInput.txt -output testOutputDir.features
}}}

We can see that the input file is the output from the lsh (nearest neighbor extraction) command, and after '-feature' parameter the input of the lsh command is also assigned.  
